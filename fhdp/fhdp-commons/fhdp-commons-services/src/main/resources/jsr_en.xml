<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <entry key="org.hibernate.validator.constraints.br.TituloEleitoral.message">invalid Brazilian Voter ID card number</entry>
    <entry key="org.hibernate.validator.constraints.NotBlank.message">may not be empty</entry>
    <entry key="org.hibernate.validator.constraints.Email.message">not a well-formed email address</entry>
    <entry key="org.hibernate.validator.constraints.URL.message">must be a valid URL</entry>
    <entry key="javax.validation.constraints.Size.message">size must be between {min} and {max}</entry>
    <entry key="javax.validation.constraints.FutureOrPresent.message">must be a date in the present or in the future</entry>
    <entry key="javax.validation.constraints.NotNull.message">must not be null</entry>
    <entry key="org.hibernate.validator.constraints.time.DurationMin.message">must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}</entry>
    <entry key="org.hibernate.validator.constraints.br.CNPJ.message">invalid Brazilian corporate taxpayer registry number (CNPJ)</entry>
    <entry key="org.hibernate.validator.constraints.ParametersScriptAssert.message">script expression "{script}" didn't evaluate to true</entry>
    <entry key="org.hibernate.validator.constraints.LuhnCheck.message">the check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed</entry>
    <entry key="javax.validation.constraints.DecimalMin.message">must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}</entry>
    <entry key="org.hibernate.validator.constraints.EAN.message">invalid {type} barcode</entry>
    <entry key="javax.validation.constraints.Min.message">must be greater than or equal to {value}</entry>
    <entry key="javax.validation.constraints.NotBlank.message">must not be blank</entry>
    <entry key="org.hibernate.validator.constraints.ModCheck.message">the check digit for ${validatedValue} is invalid, ${modType} checksum failed</entry>
    <entry key="javax.validation.constraints.Negative.message">must be less than 0</entry>
    <entry key="javax.validation.constraints.Future.message">must be a future date</entry>
    <entry key="org.hibernate.validator.constraints.NotEmpty.message">may not be empty</entry>
    <entry key="org.hibernate.validator.constraints.Mod11Check.message">the check digit for ${validatedValue} is invalid, Modulo 11 checksum failed</entry>
    <entry key="org.hibernate.validator.constraints.pl.NIP.message">invalid VAT Identification Number (NIP)</entry>
    <entry key="javax.validation.constraints.Email.message">must be a well-formed email address</entry>
    <entry key="javax.validation.constraints.PastOrPresent.message">must be a date in the past or in the present</entry>
    <entry key="javax.validation.constraints.Digits.message">numeric value out of bounds (&lt;{integer} digits&gt;.&lt;{fraction} digits&gt; expected)</entry>
    <entry key="org.hibernate.validator.constraints.SafeHtml.message">may have unsafe html content</entry>
    <entry key="javax.validation.constraints.PositiveOrZero.message">must be greater than or equal to 0</entry>
    <entry key="org.hibernate.validator.constraints.Mod10Check.message">the check digit for ${validatedValue} is invalid, Modulo 10 checksum failed</entry>
    <entry key="javax.validation.constraints.Null.message">must be null</entry>
    <entry key="org.hibernate.validator.constraints.ISBN.message">invalid ISBN</entry>
    <entry key="org.hibernate.validator.constraints.pl.PESEL.message">invalid Polish National Identification Number (PESEL)</entry>
    <entry key="javax.validation.constraints.NotEmpty.message">must not be empty</entry>
    <entry key="javax.validation.constraints.Pattern.message">must match "{regexp}"</entry>
    <entry key="org.hibernate.validator.constraints.br.CPF.message">invalid Brazilian individual taxpayer registry number (CPF)</entry>
    <entry key="javax.validation.constraints.NegativeOrZero.message">must be less than or equal to 0</entry>
    <entry key="org.hibernate.validator.constraints.Length.message">length must be between {min} and {max}</entry>
    <entry key="javax.validation.constraints.Positive.message">must be greater than 0</entry>
    <entry key="javax.validation.constraints.AssertTrue.message">must be true</entry>
    <entry key="org.hibernate.validator.constraints.pl.REGON.message">invalid Polish Taxpayer Identification Number (REGON)</entry>
    <entry key="org.hibernate.validator.constraints.CreditCardNumber.message">invalid credit card number</entry>
    <entry key="org.hibernate.validator.constraints.time.DurationMax.message">must be shorter than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}</entry>
    <entry key="org.hibernate.validator.constraints.ScriptAssert.message">script expression "{script}" didn't evaluate to true</entry>
    <entry key="org.hibernate.validator.constraints.Currency.message">invalid currency (must be one of {value})</entry>
    <entry key="javax.validation.constraints.Past.message">must be a past date</entry>
    <entry key="org.hibernate.validator.constraints.UniqueElements.message">must only contain unique elements</entry>
    <entry key="org.hibernate.validator.constraints.Range.message">must be between {min} and {max}</entry>
    <entry key="javax.validation.constraints.DecimalMax.message">must be less than ${inclusive == true ? 'or equal to ' : ''}{value}</entry>
    <entry key="javax.validation.constraints.Max.message">must be less than or equal to {value}</entry>
    <entry key="org.hibernate.validator.constraints.CodePointLength.message">length must be between {min} and {max}</entry>
</properties>
